name: CI

on: [push, pull_request]

env:
  BUILD_TYPE: Release

jobs:
  ubuntu:
    name: Ubuntu
    runs-on: ubuntu-latest

    steps:
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get -y install gettext libsdl2-dev libsdl2-image-dev libsdl2-mixer-dev libglew-dev

    - uses: actions/checkout@v3

    - name: Configure
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

    - name: Build
      run: cmake --build build

  msys2:
    name: MSYS2
    runs-on: windows-latest

    strategy:
      matrix:
        sys:
          - mingw64
          - mingw32
          - clang64
          - clang32

    steps:
    - uses: msys2/setup-msys2@v2
      with:
        msystem: ${{ matrix.sys }}
        install: base-devel
        pacboy: toolchain:p cmake:p SDL2:p SDL2_image:p SDL2_mixer:p expat:p glew:p

    - uses: actions/checkout@v3

    - name: Configure
      shell: msys2 {0}
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}

    - name: Build
      shell: msys2 {0}
      run: cmake --build build

  vs:
    name: Visual Studio
    runs-on: windows-2019

    strategy:
      matrix:
        include:
        - name: Windows 64-bit      
          arch: x64
        - name: Windows 32-bit      
          arch: Win32

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install dependencies
      run: choco install -y winflexbison3

    - name: Install vcpkg
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgGitCommitId: 'fd766eba2b4cf59c7123d46189be373e2cee959d'   # 2023.01.09 with msys2 fix
        prependedCacheKey: '${{ matrix.arch }}'

    - name: Configure
      run: cmake -B build -G "Visual Studio 16 2019" -A ${{ matrix.arch }} -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake"

    - name: Build
      run: cmake --build build --config ${{ env.BUILD_TYPE }}

    - name: Disable vcpkg cache on error
      run: echo "RUNVCPKG_NO_CACHE=1" >> $GITHUB_ENV
      if: ${{ failure() || cancelled() }}
      shell: bash

    - name: Packaging
      run: |
        cd build
        cpack -G ZIP -C ${{ env.BUILD_TYPE }}
        cpack -G WIX -C ${{ env.BUILD_TYPE }}

    - name: Uploading packages
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.name }}
        path: |
          build/*.zip
          build/*.msi

  macos:
    name: macOS
    runs-on: macOS-11

    strategy:
      matrix:
        include:
        - name: macOS 10.11+ (Intel)
          arch: x86_64
          target: 10.11
          triplet: x64-osx-dynamic
        - name: macOS 11+ (Apple Silicon)
          arch: arm64
          target: 11
          triplet: arm64-osx-dynamic

    env:
      MACOSX_DEPLOYMENT_TARGET: ${{ matrix.target }}

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Install vcpkg
      uses: lukka/run-vcpkg@v10
      with:
        vcpkgGitCommitId: 'f14984af3738e69f197bf0e647a8dca12de92996'   # 2023.01.09
        prependedCacheKey: '${{ matrix.triplet }}+${{ matrix.target }}'

    - name: Configure
      run: cmake -B build -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_OSX_ARCHITECTURES=${{ matrix.arch }} -DVCPKG_TARGET_TRIPLET=${{ matrix.triplet }} -DCMAKE_TOOLCHAIN_FILE="${{ github.workspace }}\vcpkg\scripts\buildsystems\vcpkg.cmake"

    - name: Build
      run: cmake --build build

    - name: Disable vcpkg cache on error
      run: echo "RUNVCPKG_NO_CACHE=1" >> $GITHUB_ENV
      if: ${{ failure() || cancelled() }}
      shell: bash

    - name: Packaging
      run: |
        cd build
        cpack -G DragNDrop -C ${{ env.BUILD_TYPE }}

    - name: Uploading packages
      uses: actions/upload-artifact@v3
      with:
        name: ${{ matrix.name }}
        path: build/*.dmg
